#include <ESP32Servo.h>
#include <BluetoothSerial.h>

BluetoothSerial SerialBT;
Servo myServo;

int motorPin1 = 18; // GPIO 18
int motorPin2 = 19; // GPIO 19
int motorPin3 = 23; // GPIO 23
int motorPin4 = 22; // GPIO 22
int servoPin = 5;   // GPIO 5

char command;
String sliderValue = "";

void setup() {
  // Set motor pins as output
  pinMode(motorPin1, OUTPUT);
  pinMode(motorPin2, OUTPUT);
  pinMode(motorPin3, OUTPUT);
  pinMode(motorPin4, OUTPUT);

  // Attach the servo motor
  myServo.attach(servoPin);

  // Set initial servo position
  myServo.write(90);

  // Initialize Bluetooth serial communication
  SerialBT.begin("ESP32_Car"); // Bluetooth device name
  Serial.begin(9600);
  Serial.println("Bluetooth Car Ready");
}

void loop() {
  if (SerialBT.available()) {
    char receivedChar = SerialBT.read();
    
    // Check for slider command
    if (receivedChar == 'X') {
      if (sliderValue.length() > 0) {
        int sliderPosition = sliderValue.toInt();  // Convert slider value to integer
        int servoPosition = map(sliderPosition, 0, 100, 0, 180);  // Map slider value to servo range (0-180 degrees)
        myServo.write(servoPosition);  // Set servo position
        Serial.print("Servo Position: ");
        Serial.println(servoPosition);
        sliderValue = "";  // Reset slider value for the next command
      }
    } else if (isDigit(receivedChar)) {
      sliderValue += receivedChar;  // Accumulate slider value characters
    } else {
      command = receivedChar;  // Handle car movement commands

      // Control car movement
      if (command == 'F') {  // Move forward
        digitalWrite(motorPin1, HIGH);
        digitalWrite(motorPin2, LOW);
        digitalWrite(motorPin3, LOW);
        digitalWrite(motorPin4, HIGH);
        Serial.println("Moving forward");
      } 
      else if (command == 'B') {  // Move backward
        digitalWrite(motorPin1, LOW);
        digitalWrite(motorPin2, HIGH);
        digitalWrite(motorPin3, HIGH);
        digitalWrite(motorPin4, LOW);
        Serial.println("Moving backward");
      } 
      else if (command == 'L') {  // Turn left
        digitalWrite(motorPin1, LOW);
        digitalWrite(motorPin2, HIGH);
        digitalWrite(motorPin3, LOW);
        digitalWrite(motorPin4, HIGH);
        Serial.println("Turning left");
      }
      else if (command == 'R') {  // Turn right
        digitalWrite(motorPin1, HIGH);
        digitalWrite(motorPin2, LOW);
        digitalWrite(motorPin3, HIGH);
        digitalWrite(motorPin4, LOW);
        Serial.println("Turning right");
      }
      else if (command == 'S') {  // Stop
        digitalWrite(motorPin1, LOW);
        digitalWrite(motorPin2, LOW);
        digitalWrite(motorPin3, LOW);
        digitalWrite(motorPin4, LOW);
        Serial.println("Stopping");
      }
      else if (command == 'A') {  // Reset servo to 90 degrees
        myServo.write(90);
        Serial.println("Servo reset to 90 degrees");
      }
    }
  }
}
